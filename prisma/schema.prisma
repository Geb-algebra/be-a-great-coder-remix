datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id   String @id @default(cuid())
    name String @unique // atcoder user name

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    password   Password?
    order      Order[]
    Investment Investment[]
}

model Password {
    hash String

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String @unique
}

model AtCoderAPIFetchLog {
    id        String   @id @default(cuid())
    endpoint  String
    timestamp DateTime @default(now())
    status    Int
}

model Problem {
    id         String @id
    title      String
    difficulty Int

    order Order[]
}

model Order {
    id                String    @id @default(cuid())
    prob_class        String
    fixed_revenue     BigInt
    variable_revenue  BigInt
    fixed_cost        BigInt
    investment        BigInt?
    received_datetime DateTime?
    cleared_datetime  DateTime?

    problem   Problem @relation(fields: [problemId], references: [id])
    problemId String

    user   User   @relation(fields: [userId], references: [id])
    userId String
}

model Capital {
    id            String @id @default(cuid())
    name          String
    roiFuncIndex  Float
    maxInvestment BigInt

    Investment Investment[]
}

model Investment {
    id     String @id @default(cuid())
    amount BigInt

    capital   Capital @relation(fields: [capitalId], references: [id])
    capitalId String

    user   User   @relation(fields: [userId], references: [id])
    userId String
}
